{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Cancion.js","components/Info.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarBusquedaLetra","useState","artista","cancion","busqueda","guardarBusqueda","error","guardarError","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","htmlFor","type","placeholder","onChange","Cancion","letra","length","Info","info","Object","keys","strArtistThumb","strGenre","strBiographyES","src","alt","href","strFacebook","rel","strTwitter","strLastFMChart","App","busquedaLetra","guardarLetra","guardarInfo","useEffect","a","urlLetra","urlInfo","Promise","all","axios","data","lyrics","artists","consultarApiLetra","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8a0c31cc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <p className=\"alert alert-danger col-md-4\">{mensaje}</p>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\n\r\nconst Formulario = ({guardarBusquedaLetra}) => {\r\n\r\n    const [busqueda, guardarBusqueda] = useState({\r\n        artista: '',\r\n        cancion: ''\r\n    });\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n\r\n    const {artista, cancion} = busqueda;\r\n\r\n    const actualizarState = e => {\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const buscarInfo = e =>{\r\n        e.preventDefault();\r\n        if(artista.trim() === '' || cancion.trim() === ''){\r\n            guardarError(true); \r\n            return;\r\n        }\r\n        guardarError(false);\r\n        \r\n        guardarBusquedaLetra({\r\n            artista,\r\n            cancion\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-info\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <form \r\n                        className=\"col card text-white bg-transparent mb-5 pt-5 pb-2\"\r\n                        onSubmit={buscarInfo}\r\n                    >\r\n                        <fieldset>\r\n                            <legend className=\"text-center\">Buscador de Letras</legend>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Artista</label>\r\n                                        <input \r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"artista\"\r\n                                            placeholder=\"Nombre artista\"\r\n                                            onChange={actualizarState}\r\n                                            value={artista}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Canci贸n</label>\r\n                                        <input \r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"cancion\"\r\n                                            placeholder=\"Nombre canci贸n\"\r\n                                            onChange={actualizarState}\r\n                                            value={cancion}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary btn-lg float-right\"\r\n                            >\r\n                                Buscar\r\n                            </button>\r\n                            {(error) ? <Error mensaje='Tienes campos sin completar'></Error> : null}\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Formulario;","import React, { Fragment } from 'react';\r\n\r\nconst Cancion = ({letra}) => {\r\n    if (letra.length === 0) return null;\r\n    return (\r\n        <Fragment>\r\n            <h2>Letra canci贸n</h2>\r\n            <p className=\"letra\">{letra}</p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Cancion;","import React, {Fragment} from 'react';\r\n\r\nconst Info = ({info}) => {\r\n    if(Object.keys(info).length === 0) return null;\r\n\r\n    const { strArtistThumb, strGenre, strBiographyES } = info;\r\n    \r\n    return (\r\n\r\n        <Fragment>\r\n            <div className=\"card border-light\">\r\n                <div className=\"card-header bg-primary font-weight-bold\">\r\n                    Informaci贸n del artista\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <img src={strArtistThumb} alt=\"artista\"/>\r\n                    <h2 className=\"card-text\">{strGenre}</h2>\r\n                    <p className=\"card-text\">{strBiographyES}</p>\r\n                    <div className=\"card-text\">\r\n                        <a href={`https://${info.strFacebook}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-facebook\"></i>\r\n                        </a>\r\n                        <a href={`https://${info.strTwitter}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-twitter\"></i>\r\n                        </a>\r\n                        <a href={`${info.strLastFMChart}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-lastfm\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default Info;","import React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './components/Formulario';\nimport Cancion from './components/Cancion';\nimport Info from './components/Info';\nimport axios from 'axios';\n\nfunction App() {\n\n    const [busquedaLetra, guardarBusquedaLetra] = useState({});\n    const [letra, guardarLetra] = useState('');\n    const [info, guardarInfo] = useState({});\n\n    \n    const {artista, cancion} = busquedaLetra;\n    useEffect(()=> {\n\n        if(Object.keys(busquedaLetra).length === 0) {\n            return;\n        }\n        \n        const consultarApiLetra = async () => {\n            const urlLetra = `https://api.lyrics.ovh/v1/${artista}/${cancion}`;\n            const urlInfo = `https://www.theaudiodb.com/api/v1/json/1/search.php?s=${artista}`;\n\n            const [letra, info] = await Promise.all([\n                axios(urlLetra),\n                axios(urlInfo)\n            ]);\n\n            guardarLetra(letra.data.lyrics);\n            guardarInfo(info.data.artists[0]);\n\n        }\n\n\n        consultarApiLetra();\n    }, [busquedaLetra, artista, cancion, info]);\n\n    return (\n        <Fragment>\n            <Formulario\n                guardarBusquedaLetra={guardarBusquedaLetra}\n            >\n            </Formulario>\n            <div className=\"container mt-5\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <Info \n                            info = {info}\n                        >\n                        </Info>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <Cancion\n                            letra = {letra}\n                        ></Cancion>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}